basePath: /api/v1
definitions:
  model.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.Error:
    properties:
      error:
        type: string
    type: object
  model.Message:
    properties:
      message:
        type: string
    type: object
  model.SchemaSomeUser:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.UpdateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  title: Some Users
  version: "1.0"
paths:
  /someusers/:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SchemaSomeUser'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: GetAllUsers
      tags:
      - SomeUsers
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchemaSomeUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: CreateUser
      tags:
      - SomeUsers
  /someusers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one user by id
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Error'
      summary: DeleteUserByID
      tags:
      - SomeUsers
    get:
      consumes:
      - application/json
      description: Get one user by id
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchemaSomeUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Error'
      summary: GetUserByID
      tags:
      - SomeUsers
    patch:
      consumes:
      - application/json
      description: Update full record by id
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchemaSomeUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Error'
      summary: UpdateUser
      tags:
      - SomeUsers
swagger: "2.0"
